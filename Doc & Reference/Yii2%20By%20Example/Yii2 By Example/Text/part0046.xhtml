<?xml version="1.0" encoding="utf-8" ?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"><html xmlns="http://www.w3.org/1999/xhtml" style="font-size:1.200rem;"><head><title>Setting up the GMT time zone</title><link rel="stylesheet" href="../Styles/style0001.css" type="text/css"/><meta name="generator" content="DocBook XSL Stylesheets V1.75.2"/></head><body id="page"><div class="section" title="Setting up the GMT time zone" id="aid-1BRPS1"><div class="titlepage"><div><div><h1 class="title"><a id="ch05lvl1sec40"></a>Setting up the GMT time zone</h1></div></div></div><p>It is important to set the <a id="id271" class="indexterm"></a>default time zone for date/time management.</p><p>Usually, when we refer to date/time, do not pay attention to which time zone value is being referred to.</p><p>For example, if we live in Rome and want to spend our next holiday in New York, when we receive the check-in date/time from the hotel, we must consider which time zone time is being referred to (whether local or remote).</p><p>When we display a date/time value that could be misunderstood, it is always recommended to add a time zone reference to it. The time zone is expressed through positive or negative hours compared to a reference that is usually<a id="id272" class="indexterm"></a> <span class="strong"><strong>GMT</strong></span> (<span class="strong"><strong>Greenwich Mean Time</strong></span>).</p><p>For example, if it is 9 p.m. in Rome (GMT +1), in GMT time it will be 8 p.m. (GMT +0), 3 p.m. in New York (GMT -5), and finally 12 p.m. in Los Angeles (GMT -8).</p><p>Therefore, it is necessary to establish a common shared time value. For this purpose, it is advisable to use GMT as the time reference for all values and operations on values.</p><p>We need to configure the time zone in two environments:</p><div class="itemizedlist"><ul class="itemizedlist"><li class="listitem">In an application, set the <code class="literal">timeZone</code> attribute of a configuration; this will set the default time zone for all functions about the date and time</li><li class="listitem">Some databases, such as MySQL, do not have internal management of time zones, so every value uses the default time zone of the database or the time zone configured during connection from the application to the database; we will set the default time zone during the connection to the database</li></ul></div><p>Complete the first step. Open <code class="literal">basic/config/web.php</code> and add the <code class="literal">timeZone</code> property with the <code class="literal">GMT</code> value in the <code class="literal">config</code> array, for example, after the <code class="literal">basePath</code> property:</p><div class="informalexample"><pre class="programlisting">    'timeZone' =&gt; 'GMT',</pre></div><p>The second step is setting the time zone for the database connections, if the database, such as MySQL, does not provide it. This is done globally by adding this code in the <code class="literal">on afterOpen</code> event. Open <code class="literal">basic/config/db.php</code> and append it as the last attribute in an array (usually the last attribute is <code class="literal">charset</code>):</p><div class="informalexample"><pre class="programlisting">'on afterOpen' =&gt; function($event) {
$event-&gt;sender-&gt;createCommand("SET time_zone = '+00:00'")-&gt;execute();
}</pre></div><p>This code means that once the connection with the database is opened, the SQL query <code class="literal">SET time_zone = +00:00</code> will be executed for every connection that we are going to establish with the database, and every date/time field value and function related to the GMT (+00:00) time zone will be considered.</p><p>Let's make a test. Create a <a id="id273" class="indexterm"></a>new controller that simply displays the current date/time and time zone, in <code class="literal">basic/controllers/TestTimezoneController.php</code> with an action named <code class="literal">actionCheck()</code>:</p><div class="informalexample"><pre class="programlisting">&lt;?php

namespace app\controllers;

use Yii;
use yii\web\Controller;

class TestTimezoneController extends Controller
{
    public function actionCheck()
    {
        $dt = new \DateTime();
        echo 'Current date/time: '.$dt-&gt;format('Y-m-d H:i:s');
        echo '&lt;br /&gt;';
        echo 'Current timezone: '.$dt-&gt;getTimezone()-&gt;getName();
        echo '&lt;br /&gt;';
    }
}</pre></div><p>Point your browser to <code class="literal">http://hostname/basic/web/test-timezone/check</code>. This is what my browser displayed:</p><div class="informalexample"><pre class="programlisting">Current date/time: 2015-05-27 19:53:35
Current timezone: GMT</pre></div><p>And, the local time (in Rome) was 21:53:35, because Rome was then at +02:00 GMT due to daylight savings time.</p><p>If we comment the <code class="literal">timeZone</code> property in the app configuration in <code class="literal">basic/config/web.php</code>, we will see the default server time zone that is in my browser:</p><div class="informalexample"><pre class="programlisting">Current date/time: 2015-05-27 21:53:35
Current timezone: Europe/Rome</pre></div><p>This confirms that we have changed the default <code class="literal">timezone</code> property for all date/time functions. The last check to perform is on the database. Create a new action named <code class="literal">actionCheckDatabase</code> to verify that the database's default time zone for the current (and every) connection is GMT:</p><div class="informalexample"><pre class="programlisting">public function actionCheckDatabase()
{
        $result = \Yii::$app-&gt;db-&gt;createCommand('SELECT NOW()')-&gt;queryColumn();

        echo 'Database current date/time: '.$result[0];
}</pre></div><p>Point your browser to <code class="literal">http://hostname/basic/web/test-timezone/check-database</code>. This is what my browser displayed:</p><div class="informalexample"><pre class="programlisting">Database current date/time: 2015-05-27 20:12:08</pre></div><p>And the local time (in Rome) was 22:12:08, because Rome was then at +02:00 GMT.</p><p>Remember that, from <a id="id274" class="indexterm"></a>now on, all date/time information displayed in a database refers to the GMT time zone, although this specification was missing (as we can see in the previous database's current date/time).</p><div class="note" title="Note"><h3 class="title"><a id="tip03"></a>Tip</h3><p>Another strategy to handle the GMT time zone in a database's date/time column is to store the value as a timestamp, which is by definition an integer that indicates the number of seconds from 01/01/1970 at 00:00:00 in the GMT (UTC) time zone; so it is immediately understandable that field is a date/time with the GMT time zone, but remember that any database function applied to it will be executed using the database's default time zone.</p></div></div></body></html>