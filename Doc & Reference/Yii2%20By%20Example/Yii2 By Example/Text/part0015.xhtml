<?xml version="1.0" encoding="utf-8" ?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"><html xmlns="http://www.w3.org/1999/xhtml" style="font-size:1.200rem;"><head><title>Installing Yii2 with Composer</title><link rel="stylesheet" href="../Styles/style0001.css" type="text/css"/><meta name="generator" content="DocBook XSL Stylesheets V1.75.2"/></head><body id="page"><div class="section" title="Installing Yii2 with Composer" id="aid-E9OE1"><div class="titlepage"><div><div><h1 class="title"><a id="ch01lvl1sec09"></a>Installing Yii2 with Composer</h1></div></div></div><p>Composer<a id="id6" class="indexterm"></a> is a tool for dependency management in PHP. Yii2 uses it to install itself and other vendors' modules (for example, bootstrap).</p><p>It is also possible<a id="id7" class="indexterm"></a> to install Yii2 in the old way, by downloading the<a id="id8" class="indexterm"></a> complete package and transferring it to the host, local or remote, where the framework will be installed. However, Composer will give us many benefits, like the ability to easily update the framework and ensure that all package dependencies are satisfied. Composer is de facto the new way to install and maintain projects, so I recommend using it from the start. If you are unsure about using Composer, it's worth mentioning that most users will need to learn two or three commands at most, so it's not a steep learning curve.</p><p>Yii2 has two available templates to start with: basic and advanced. We will start with the basic template, but we will also see in the next chapters how to use advanced templates.</p><p>So, let's look at how to install Yii2 with Composer. We need to access the folder through the console, where the web server's httpdocs point to and launch these commands:</p><div class="informalexample"><pre class="programlisting">
<span class="strong"><strong>curl -s http://getcomposer.org/installer | php</strong></span>
<span class="strong"><strong>php composer.phar global require "fxp/composer-asset-plugin:1.0.0"</strong></span>
<span class="strong"><strong>php composer.phar create-project --prefer-dist yiisoft/yii2-app-basic basic</strong></span>
</pre></div><p>These commands are useful if we are in the Linux or Mac environment. On Windows, you need to download <code class="literal">Composer-Setup.exe</code> from Composer's official website and run it.</p><p>The first <a id="id9" class="indexterm"></a>command gets the <a class="ulink" href="http://getcomposer.org/installer">http://getcomposer.org/installer</a> URL and passes it to PHP to create the <code class="literal">composer.phar</code> file.</p><p>The second command installs the Composer asset plugin, which allows us to manage bower and npm package dependencies through Composer.</p><p>The third and final<a id="id10" class="indexterm"></a> command installs Yii2 in a directory named <code class="literal">basic</code>. If you <a id="id11" class="indexterm"></a>want, you can choose a different directory name.</p><div class="note" title="Note"><h3 class="title"><a id="note02"></a>Note</h3><p>During the installation, Composer may ask for our GitHub login credentials and this is normal because Composer needs to get enough API rate limit to retrieve the dependent package information from GitHub. If you don't have a GitHub account, this is the right moment to create a new one!</p></div><p>If we are using Windows, we need to <a id="id12" class="indexterm"></a>download it from <a class="ulink" href="https://getcomposer.org">https://getcomposer.org</a> and run it. The last two commands will be the same.</p><p>We have installed Yii2!</p><p>To test it, point to <code class="literal">http://hostname/basic/web</code> and we should see the <span class="emphasis"><em>My Yii Application</em></span> page.</p></div></body></html>