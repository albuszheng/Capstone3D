<?xml version="1.0" encoding="utf-8" ?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"><html xmlns="http://www.w3.org/1999/xhtml" style="font-size:1.200rem;"><head><title>Chapter&nbsp;3.&nbsp;Making Pretty URLs</title><link rel="stylesheet" href="../Styles/style0001.css" type="text/css"/><meta name="generator" content="DocBook XSL Stylesheets V1.75.2"/></head><body id="page"><div class="chapter" title="Chapter&nbsp;3.&nbsp;Making Pretty URLs" id="aid-RL0A1"><div class="titlepage"><div><div><h1 class="title"><a id="ch03"></a>Chapter&nbsp;3.&nbsp;Making Pretty URLs</h1></div></div></div><p>This chapter explains how to configure URL rules and make URLs pretty, in particular for search engines. We will cover the following topics in this chapter:</p><div class="itemizedlist"><ul class="itemizedlist"><li class="listitem">Using Pretty URLs</li><li class="listitem">Custom URL rules<div class="itemizedlist"><ul class="itemizedlist"><li class="listitem">Example &ndash; news items list by year or category</li></ul></div></li><li class="listitem">The default parameters in rules<div class="itemizedlist"><ul class="itemizedlist"><li class="listitem">Example &ndash; the index page to display list links</li></ul></div></li><li class="listitem">Complete URL rule parameters</li><li class="listitem">The URL pattern to support a multilanguage view</li><li class="listitem">Creating the rule class</li></ul></div><div class="section" title="Using pretty URLs"><div class="titlepage"><div><div><h1 class="title"><a id="ch03lvl1sec23"></a>Using pretty URLs</h1></div></div></div><p>The <a id="id121" class="indexterm"></a>URL format is very important for SEO. People do not pay attention to URLs (some browsers does not display them at all), but search engines make correspondences between text in the page and the URL.</p><p>Until now, we have used this type of URL <code class="literal">index.php?r=site/index</code> or <code class="literal">index.php?r=site/about</code>, where <code class="literal">r</code> indicates the parameter route to follow. Now, we will see how to change these formats in <code class="literal">site/index</code> and <code class="literal">site/about</code>, that are more easily readable and useful for search engines.</p><p>In order to use pretty URLs, we need to configure Yii2 to handle them, and this can be done in a couple of minutes.</p><p>First of all, we must ensure that all requests are rewritten to <code class="literal">web/index.php</code>. In Linux, we can change web server configuration using Apache and insert the <code class="literal">.htaccess</code> file in Yii2's app root folder, if this file does not exist. The <code class="literal">.htaccess</code> file allows us to override some default configuration of the web server.</p><div class="note" title="Note"><h3 class="title"><a id="note14"></a>Note</h3><p>In the Linux environment, the filename starting with dot indicates that this file is hidden.</p></div><p>The <a id="id122" class="indexterm"></a>content of <code class="literal">.htaccess</code> is the same as Yii1:</p><div class="informalexample"><pre class="programlisting">RewriteEngine on

# If a directory or a file exists, use it directly
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
# Otherwise forward it to index.php
RewriteRule . web/index.php</pre></div><p>If the app root is <code class="literal">/var/www/vhosts/yiiapp/basic</code>, we will insert <code class="literal">.htaccess</code> in <code class="literal">/var/www/vhosts/yiiapp/basic</code>.</p><p>The first row activates <code class="literal">RewriteEngine</code> of the web server; then, in the second and third rows, the script checks whether the request is not in an existing file or folder; and finally the request is rewritten to <code class="literal">web/index.php</code>. With these changes, all the requests that are not existing files or path folders will be rewritten to <code class="literal">web/index.php</code>.</p><div class="note" title="Note"><h3 class="title"><a id="note15"></a>Note</h3><p>We can also configure rewrite rules in Apache configuration instead of the <code class="literal">.htaccess</code> file, if we have access to this level of Apache configuration.</p><p>If the <code class="literal">.htaccess</code> configuration has been ignored, check whether <code class="literal">AllowOverride</code> is set to <code class="literal">All</code> as follows:</p><div class="informalexample"><pre class="programlisting">&lt;Directory /var/www/path/to/folder&gt;
   AllowOverride All
&lt;/Directory&gt;</pre></div><p>And that is not set to <code class="literal">None</code>.</p></div><p>The last thing to do now is to configure Yii2 in order to handle a pretty URL.</p><p>Let's open <code class="literal">config/web.php</code> and add these contents in the <code class="literal">components</code> attribute:</p><div class="informalexample"><pre class="programlisting">'urlManager' =&gt; [
  'enablePrettyUrl' =&gt; true,
],</pre></div><p>Adding the <code class="literal">enablePrettyUrl</code> property, we have just configured <code class="literal">urlManager</code> to enable the pretty URL, toggling the pretty URL format.</p><p>The previous URL <code class="literal">index.php?r=site/index</code> becomes <code class="literal">/index.php/site/index</code> and <code class="literal">index.php?r=site/about</code> becomes <code class="literal">/index.php/site/about</code>.</p><p>Using the <code class="literal">enablePrettyUrl</code> property, we will have the prefix <code class="literal">index.php</code> again. We can choose whether to keep it or not; however, to limit the URL length, it is advisable to remove it.</p><p>In order to control the presence of the <code class="literal">index.php</code> prefix, we use another property called <code class="literal">showScriptName</code>.</p><p>If we set this property to <code class="literal">false</code>, we will remove the first part of the URL. This is our updated configuration:</p><div class="informalexample"><pre class="programlisting">'urlManager' =&gt; [
    'enablePrettyUrl' =&gt; true,
    'showScriptName' =&gt; false,
],</pre></div><p>Now, <a id="id123" class="indexterm"></a>point the browser to <code class="literal">http://hostname/basic/web/site/index</code> to view the first page of the Yii2 application and check whether the other links are in the pretty format.</p><p>Finally, there is another property for the <code class="literal">urlManager</code> component, used to enable URL parsing based only on given URL rules, named <code class="literal">enableStrictParsing</code>. If this property is true, only the rules defined in <code class="literal">urlManager</code> will be executed; if there is no URL that matches the request, an error will be displayed.</p></div></div></body></html>