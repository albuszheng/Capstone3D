<?xml version="1.0" encoding="utf-8" ?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"><html xmlns="http://www.w3.org/1999/xhtml" style="font-size:1.200rem;"><head><title>Sharing data between views and layout</title><link rel="stylesheet" href="../Styles/style0001.css" type="text/css"/><meta name="generator" content="DocBook XSL Stylesheets V1.75.2"/></head><body id="page"><div class="section" title="Sharing data between views and layout" id="aid-NQU21"><div class="titlepage"><div><div><h1 class="title"><a id="ch02lvl1sec19"></a>Sharing data between views and layout</h1></div></div></div><p>Yii2 provides a standard <a id="id110" class="indexterm"></a>solution to share data between views and layout, through the <code class="literal">params</code> property of the View component that you can use to share data among views.</p><div class="note" title="Note"><h3 class="title"><a id="note09"></a>Note</h3><p>This is a standard solution since the <code class="literal">params</code> property exists in all views and it is attached to the View component.</p></div><p>This property, <code class="literal">params</code>, is an array that we can use without any restriction.</p><p>Imagine that we want to fill the breadcrumb element in the layout to track the path of navigation.</p><p>Open the main layout at <code class="literal">views/layouts/main.php</code>; you should find the default implementation of breadcrumb just before declaring the footer:</p><div class="informalexample"><pre class="programlisting">        &lt;div class="container"&gt;
            &lt;?= Breadcrumbs::widget([
                'links' =&gt; isset($this-&gt;params['breadcrumbs']) ? $this-&gt;params['breadcrumbs'] : [],
            ]) ?&gt;
         &lt;/div&gt;</pre></div><p>We need to fill the breadcrumbs property of <code class="literal">params</code> in view to display from any view to the layout custom path. For example, we want to display breadcrumbs in the <code class="literal">SiteController</code> index.</p><p>Go to <code class="literal">views/site/index.php</code> and add the following code at the top of the file:</p><div class="informalexample"><pre class="programlisting">$this-&gt;params['breadcrumbs'][] = 'My website';</pre></div><div class="note" title="Note"><h3 class="title"><a id="note10"></a>Note</h3><p>Since we are in view file, <code class="literal">$this</code> refers to View component.</p></div><p>Go to <code class="literal">http://hostname/basic/web/index.php?r=site/index</code> to see the breadcrumb bar <a id="id111" class="indexterm"></a>appearing at the top of the page:</p><div class="mediaobject"><img src="../Images/image00250.jpeg" alt="Sharing data between views and layout"/></div><p style="clear:both; height: 1em;"> </p><div class="section" title="Example &ndash; change the layout background based on a URL parameter"><div class="titlepage"><div><div><h2 class="title"><a id="ch02lvl2sec16"></a>Example &ndash; change the layout background based on a URL parameter</h2></div></div></div><p>Another example of <a id="id112" class="indexterm"></a>communication between view and layout is, for instance, to change the layout background color based on a URL parameter.</p><p>We need to change the background of route <code class="literal">site/index</code> passing the <code class="literal">bckg</code> parameter in URL.</p><p>Therefore, we must open <code class="literal">views/site/index.php</code> and put this code at the top:</p><div class="informalexample"><pre class="programlisting">&lt;?php
$backgroundColor = isset($_REQUEST['bckg'])?$_REQUEST['bckg']:'#FFFFFF';
$this-&gt;params['background_color'] = $backgroundColor;</pre></div><p>This code will set $<code class="literal">backgroundColor</code> to <code class="literal">#FFFFFF</code> (white color), if it is not passed to the <code class="literal">bckg</code> parameter, otherwise it will be passed a value.</p><p>Then, set the <code class="literal">params</code> attribute of View component in order to write its content in layout.</p><p>Open <code class="literal">views/layout/main.php</code>, and, in the <code class="literal">body</code> tag, apply the style based on <code class="literal">params['background_color']</code> passed from view.</p><p>Then, let's change the layout of the body tag with the following:</p><div class="informalexample"><pre class="programlisting">&lt;?php
$backgroundColor = isset($this-&gt;params['background_color'])?$this-&gt;params['background_color']:'#FFFFFF'; ?&gt;
&lt;body style="background-color:&lt;?php echo $backgroundColor ?&gt;"&gt;</pre></div><p>Finally, go<a id="id113" class="indexterm"></a> to <code class="literal">http://hostname/basic/web/index.php?r=site/index&amp;bckg=yellow</code> to have a yellow background or to <code class="literal">http://hostname/basic/web/index.php?r=site/index&amp;bckg=#FF0000</code> to have a red one.</p><div class="note" title="Note"><h3 class="title"><a id="note11"></a>Note</h3><p>In this example, we are setting the <code class="literal">background</code> property of <code class="literal">params</code> only in <code class="literal">views/site/index.php</code>. Other views do not set this property, so if we have not checked whether <code class="literal">background_color</code> property exists in the layout file, we will receive an error of missing the attribute from the framework, which means:</p><div class="informalexample"><pre class="programlisting">$backgroundColor = isset($this-&gt;params['background_color'])?$this-&gt;params['background_color']:'#FFFFFF';</pre></div></div></div></div></body></html>